// <auto-generated />
using System;
using IdentityServer.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IdentityServer.Models.Context.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240324080607_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("identitydb")
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ApiResource", b =>
                {
                    b.Property<Guid>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Secret")
                        .HasColumnType("uuid");

                    b.HasKey("Index");

                    b.ToTable("ApiResource", "identitydb");

                    b.HasData(
                        new
                        {
                            Index = new Guid("67756a77-a691-4597-91f5-573e2db344dc"),
                            Name = "student-api-resource",
                            Secret = new Guid("9070e5fe-db28-4d9a-b19b-31a77592be20")
                        },
                        new
                        {
                            Index = new Guid("adffadc0-b2a8-4bf3-9203-8d6251d36092"),
                            Name = "teacher-api-resource",
                            Secret = new Guid("15897cd0-1ae9-4c93-b847-ea99af6d12a3")
                        });
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ApiScope", b =>
                {
                    b.Property<Guid>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Index");

                    b.ToTable("ApiScope", "identitydb");

                    b.HasData(
                        new
                        {
                            Index = new Guid("d45fffbd-4e4b-4005-b00c-cad3e63c02cb"),
                            DisplayName = "Student Api Scope",
                            Name = "student-scope"
                        },
                        new
                        {
                            Index = new Guid("4c4da98c-cec2-4dd6-920e-b5bc812189bc"),
                            DisplayName = "Teacher Api Scope",
                            Name = "teacher-scope"
                        });
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ApiScopeResource", b =>
                {
                    b.Property<Guid>("ApiScopeIndex")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApiResourceIndex")
                        .HasColumnType("uuid");

                    b.HasKey("ApiScopeIndex", "ApiResourceIndex");

                    b.HasIndex("ApiResourceIndex");

                    b.ToTable("ApiScopeResource", "identitydb");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.Client", b =>
                {
                    b.Property<Guid>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Index");

                    b.ToTable("Client", "identitydb");

                    b.HasData(
                        new
                        {
                            Index = new Guid("c822068a-2b09-47d6-87f9-5fae675919bb"),
                            ClientId = "ewb-student-web"
                        },
                        new
                        {
                            Index = new Guid("79fc80be-e2ee-495d-b1b7-c59d93c26833"),
                            ClientId = "ewb-teacher"
                        });
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ClientGrantType", b =>
                {
                    b.Property<Guid>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientIndex")
                        .HasColumnType("uuid");

                    b.Property<string>("GrantType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Index");

                    b.HasIndex("ClientIndex");

                    b.ToTable("ClientGrantType", "identitydb");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ClientScope", b =>
                {
                    b.Property<Guid>("ClientIndex")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApiScopeIndex")
                        .HasColumnType("uuid");

                    b.HasKey("ClientIndex", "ApiScopeIndex");

                    b.HasIndex("ApiScopeIndex");

                    b.ToTable("ClientScope", "identitydb");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ClientSecret", b =>
                {
                    b.Property<Guid>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientIndex")
                        .HasColumnType("uuid");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Index");

                    b.HasIndex("ClientIndex");

                    b.ToTable("ClientSecret", "identitydb");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ApiScopeResource", b =>
                {
                    b.HasOne("IdentityServer.Models.DomainClasses.ApiResource", "ApiResource")
                        .WithMany("ApiScopeResources")
                        .HasForeignKey("ApiResourceIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityServer.Models.DomainClasses.ApiScope", "ApiScope")
                        .WithMany("ApiScopeResources")
                        .HasForeignKey("ApiScopeIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiResource");

                    b.Navigation("ApiScope");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ClientGrantType", b =>
                {
                    b.HasOne("IdentityServer.Models.DomainClasses.Client", "Client")
                        .WithMany("ClientGrantTypes")
                        .HasForeignKey("ClientIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ClientScope", b =>
                {
                    b.HasOne("IdentityServer.Models.DomainClasses.ApiScope", "ApiScope")
                        .WithMany("ClientScopes")
                        .HasForeignKey("ApiScopeIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityServer.Models.DomainClasses.Client", "Client")
                        .WithMany("ClientScopes")
                        .HasForeignKey("ClientIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiScope");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ClientSecret", b =>
                {
                    b.HasOne("IdentityServer.Models.DomainClasses.Client", "Client")
                        .WithMany("ClientSecrets")
                        .HasForeignKey("ClientIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ApiResource", b =>
                {
                    b.Navigation("ApiScopeResources");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.ApiScope", b =>
                {
                    b.Navigation("ApiScopeResources");

                    b.Navigation("ClientScopes");
                });

            modelBuilder.Entity("IdentityServer.Models.DomainClasses.Client", b =>
                {
                    b.Navigation("ClientGrantTypes");

                    b.Navigation("ClientScopes");

                    b.Navigation("ClientSecrets");
                });
#pragma warning restore 612, 618
        }
    }
}
